1. to add keybinding in fedora do:
   a. go to Activities
   b. type in shearch keyboard
   c. choose shortcuts
   d. choose Custom Shortcuts
   e. press +
   f. enter name of the command and the actual command (command has to be correct) for example gnome-terminal and press add
   g. press Disabled
   f. press key combo that you want
2.  [aj@localhost ~]$   gsettings set org.gnome.mutter overlay-key "" #to disable Super key from showing overview of apps:
3.  [aj@localhost ~]$   sudo usermod -a -G grname username #to add existing user to a given group 
4.  [aj@localhost ~]$   adduser <username> # to add new user
5.  [aj@localhost ~]$   journalctl -r -p 3 # to check the system logs most recent first and up to priority 3
6.  [aj@localhost ~]$   ldd <pathto app> # to check library dependency
7. to disable pasword entry during sudo command for allowed users (belonging to wheel grooup) go to /etc/sudoers, and uncomment the line:
  %wheel  ALL=(ALL)       NOPASSWD: ALL

8.  [aj@localhost ~]$   sudo gpasswd -d lan wheel # to remove the user lan from group wheel do this
9.  [aj@localhost ~]$   who# to list the users and terminals on which they are loged in type
10. to change the terminal do: ctrl+alt+F1,...F6
11. [aj@localhost ~]$    startx # to start xterminal from texst terminal
12. Ctrl-Alt-F2 to console mode
    Ctrl-Alt-F7 to GUI mode.
13. ps -o euid,ruid,pid,comm -t tty6 # to see processes if any on tty6
14. who # to list all the ttys that are available.
15. tty# to see the terminal you are on.
16. whreis su# to find the program su
17.  [aj@localhost ~]$ ls -la /proc/<pid>/fd # to see all the file descriptors for a given process id
18. [aj@localhost ~]$ less -S /proc/net/tcp # to see all the open tcp sockets see http://www.onlamp.com/pub/a/linux/2000/11/16/LinuxAdmin.html for header note that ip addr is little endian but port is not. You can use socket:[###] i.e the ### from step 17. to find the entry in the table.
19.When your system has configurable system limits, you can use the sysconf function to find out the value that applies to any particular machine. example:
int myOPEN_MAX = sysconf (_SC_OPEN_MAX);
	printf("%d\n",myOPEN_MAX);
20. 
[aj@localhost names]$ ls /etc/hosts
21. [aj@localhost ~]$ strace -o tmp.strace.out ls # to see all the system calls that take place when ls is executed replace ls with your program.
22.   [aj@localhost ~]$ grep -r "strings..." * # grep recursively in all files for string in ""
23. [aj@localhost ~]$ find -iname "MyCProgram.c" #find MyCProgram.c anyware

24.  [aj@localhost ~]$ find . -name "MyCProgram.c" #find MyCProgram.c in curr dir
25.  [aj@localhost ~]$ diff  <fname1> <fname2> # < means in fname1 > means in fname2,
31c31 means lines 31 are different and both are shown 
< int myOPEN_MAX = sysconf (_SC_OPEN_MAX);
---
>   int myOPEN_MAX = sysconf (_SC_OPEN_MAX);
37c37
< 23. [aj@localhost ~]$ find -iname "MyCProgram.c" #find MyCProgram.c anyware
---
> 23. [aj@localhost ~]$ find -iname "MyCProgram.c" #find  MyCProgram.c anyware
41a42,43 means in fname2 42, and 43 lines are added
> 
> wowthis is cool
24. [aj@localhost ~]$ sort -t: -k 3n /etc/passwd | less
25. [aj@localhost ~]$ find /tmp -name core -type f -print | xargs /bin/rm -f#

       Find files named core in or below the directory /tmp and delete them.  Note that this will work incorrectly if there are any filenames containing newlines
       or spaces.

26. [aj@localhost ~]$ shutdown -h now# shud down system now
27. [aj@localhost ~]$ shutdown -r now# shud down system now
28. [aj@localhost ~]$ ps -efH # show the processes in tree hierarcy
29. [aj@localhost ~]$ free -g # show free and used ram in gigs
30. df -Th # display disk usage in gigs as well as the type of fs
31. $ cat file1 file2 # open several files at the same time
32. sudo passwd -d aj #remove password for user aj
33. ifconfig eth0 up # turn interface up
    ifconfig eth0 down #down
34. lsof +D /home/aj/code/c++/ # list all the open files and directories in a specified dir
35. lsof -u aj# list all open files by aj
36. lsof -i TCP:22 #  list all the open processes on port 22
37. lsof -ni 4 # list only ipv4 open files
38. lsof  -u ^root|grep tcpserv # list all the open files except owned by root, and search for process called tcpserv
39. lsof -i #  shows the list of all network connections ‘LISTENING & ESTABLISHED’.
40. lsof -p 1# show open files for process id 1
41. umask does the following:
          file permisison 666 = 110 110 110 
          unmask value    077 = 000 111 111
	  will result in, 600 = 110 000 000
   see http://www.cyberciti.biz/tips/understanding-linux-unix-umask-value-usage.html
42. sudo find / -perm -4000 -print # to list all SUID files in linux
43. ps $$ #to see wich shell you are runnig or echo $0
44. $$ holds pid of the current shell running
45. hexdump filename # to view binary file
46. cat /dev/vcs3 # to see contents of the tty3 virtual terminal, but you need root privilages
47. cut -c 2-4 tmp.txt # to show only caracters from 2-4 of every line
48. [aj@localhost ~]$ echo 1,2,3,4,5,6 > tmp.txt  # 
[aj@localhost ~]$ cut -d , -f2-3,6 tmp.txt # I specify delimiter by -d and range of fileds by -f i.e fields 2-3 and 6
49. cut -d " " -f2 cut.txt # to use space as a delimiter
50. cut -d : -f1 /etc/passwd # list only users 
51. cat >> tmp.txt # to append some text to a file. Type the text followed by ctrl-D
52. hash # to see which commands used in the current session
53. ulimit -a # list system limits like core file size, etc
54. What is SUID and how to set it in Linux?
n simple words users will get file owner’s permissions as well as owner UID and GID when executing a file/program/command.
Note that if the other has no execute permission he will not be able to run exacutable with suid THIS IS IMPORTANT I SPENT 1 HOUR FIGURING IT OUT. Once the user is able to run the script then he obtains the owners privilages as well as its own. to set suid do: chmod 4755 fname for example. to unset: chmod 4755 fname for example
55. ldd daytimetcpcliv6-x64# run ldd on any c or c++ compiled program to list library dependecies. Then: linux-vdso.so.1 (0x00007ffc96525000)
	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f2f296b3000)
	libc.so.6 => /lib64/libc.so.6 (0x00007f2f292f2000)
	/lib64/ld-linux-x86-64.so.2 (0x0000563d46e70000)

just run /lib64/libc.so.6 and it will print the version of the glibc.
56. lsusb # list all usb devices
57. arecord <filename.wav> # record with microphone and save it in the filename.wav in home dir
58. aplay <filename.wav> # play the recorded file
59. sudo mount -t tmpfs tmp1 /home/aj/tmp1 # mount tmpfs to the /home/aj/tmp1. The old files are not visible anymore
60. sudo umount /home/aj/tmp1 # unmount the file system. Old file system files become visible again.
61. sudo dnf update
62. sudo dnf install gcc-c++
